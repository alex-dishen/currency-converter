{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(currency) {\n    this.currency = currency;\n    this.title = 'Currency Swap';\n    this.currJSON = [];\n    this.leftCurrency = 'USD';\n    this.rightCurrency = 'UAH';\n    this.result = '';\n    this.numberToConvert = 0;\n    this.currentDollar = 0;\n    this.currentEuro = 0;\n    this.leftToRight = true;\n  }\n  changeLeftCurrency(a) {\n    this.leftCurrency = a;\n  }\n  changeRightCurrency(b) {\n    this.rightCurrency = b;\n  }\n  getCurrentCurrencies() {\n    for (let i = 0; i < 2; i++) {\n      this.currency.getCurrencyData(i < 1 ? \"USD\" : \"EUR\").subscribe(data => {\n        this.currJSON = JSON.stringify(data);\n        this.currJSON = JSON.parse(this.currJSON);\n        i < 1 ? this.currentDollar = this.currJSON.rates.UAH.toFixed(2) : this.currentEuro = this.currJSON.rates.UAH.toFixed(2);\n      });\n    }\n  }\n  convert(digit) {\n    this.numberToConvert = digit;\n    if (this.leftToRight) {\n      console.log('hi');\n      this.currency.getCurrencyData(this.leftCurrency).subscribe(data => {\n        this.currJSON = JSON.stringify(data);\n        this.currJSON = JSON.parse(this.currJSON);\n        if (this.rightCurrency === 'USD') {\n          let outcome = +this.currJSON.rates.USD * this.numberToConvert;\n          this.result = outcome.toFixed(2);\n        }\n        if (this.rightCurrency === 'EUR') {\n          let outcome = +this.currJSON.rates.EUR * this.numberToConvert;\n          this.result = outcome.toFixed(2);\n        }\n        if (this.rightCurrency === 'UAH') {\n          let outcome = +this.currJSON.rates.UAH * this.numberToConvert;\n          this.result = outcome.toFixed(2);\n        }\n      });\n      if (!this.leftToRight) {\n        this.currency.getCurrencyData(this.rightCurrency).subscribe(data => {\n          this.currJSON = JSON.stringify(data);\n          this.currJSON = JSON.parse(this.currJSON);\n          if (this.leftCurrency === 'USD') {\n            let outcome = +this.currJSON.rates.USD * this.numberToConvert;\n            this.result = outcome.toFixed(2);\n          }\n          if (this.leftCurrency === 'EUR') {\n            let outcome = +this.currJSON.rates.EUR * this.numberToConvert;\n            this.result = outcome.toFixed(2);\n          }\n          if (this.leftCurrency === 'UAH') {\n            let outcome = +this.currJSON.rates.UAH * this.numberToConvert;\n            this.result = outcome.toFixed(2);\n          }\n        });\n      }\n    }\n  }\n  ngOnInit() {\n    this.getCurrentCurrencies();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":"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","names":["Component","AppComponent","constructor","currency","changeLeftCurrency","a","leftCurrency","changeRightCurrency","b","rightCurrency","getCurrentCurrencies","i","getCurrencyData","subscribe","data","currJSON","JSON","stringify","parse","currentDollar","rates","UAH","toFixed","currentEuro","convert","digit","numberToConvert","leftToRight","console","log","outcome","USD","result","EUR","ngOnInit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/alex-dishen/Developer/Projects/currency-converter/src/app/app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CurrencyAPIDataService } from './service/currency-api-data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Currency Swap';\n\n  currJSON: any = [];\n  leftCurrency = 'USD';\n  rightCurrency = 'UAH';\n  result: string = '';\n  numberToConvert: number = 0;\n  currentDollar: number = 0;\n  currentEuro: number = 0;\n  leftToRight: boolean = true;\n\n\n  changeLeftCurrency(a: string) {\n    this.leftCurrency = a;\n  }\n\n  changeRightCurrency(b: string) {\n    this.rightCurrency = b;\n  }\n\n  constructor(private currency: CurrencyAPIDataService) {}\n\n  getCurrentCurrencies() {\n    for(let i = 0; i < 2; i++) {\n      this.currency.getCurrencyData(i < 1 ? \"USD\" : \"EUR\").subscribe(data => {\n        this.currJSON = JSON.stringify(data);\n        this.currJSON = JSON.parse(this.currJSON);\n\n        i < 1 \n          ? this.currentDollar = this.currJSON.rates.UAH.toFixed(2)\n          : this.currentEuro = this.currJSON.rates.UAH.toFixed(2);\n      })\n    }\n  }\n\n  convert(digit: number) {\n    this.numberToConvert = digit;\n    if(this.leftToRight) {\n      console.log('hi')\n      this.currency.getCurrencyData(this.leftCurrency).subscribe(data => {\n        this.currJSON = JSON.stringify(data);\n        this.currJSON = JSON.parse(this.currJSON);\n        if (this.rightCurrency === 'USD') {\n          let outcome = +this.currJSON.rates.USD * this.numberToConvert;\n          this.result = outcome.toFixed(2);\n        }\n        if (this.rightCurrency === 'EUR') {\n          let outcome = +this.currJSON.rates.EUR * this.numberToConvert;\n          this.result = outcome.toFixed(2);\n        }\n        if (this.rightCurrency === 'UAH') {\n          let outcome = +this.currJSON.rates.UAH * this.numberToConvert;\n          this.result = outcome.toFixed(2);\n        }\n      })\n    if(!this.leftToRight) {\n      this.currency.getCurrencyData(this.rightCurrency).subscribe(data => {\n        this.currJSON = JSON.stringify(data);\n        this.currJSON = JSON.parse(this.currJSON);\n        if (this.leftCurrency === 'USD') {\n          let outcome = +this.currJSON.rates.USD * this.numberToConvert;\n          this.result = outcome.toFixed(2);\n        }\n        if (this.leftCurrency === 'EUR') {\n          let outcome = +this.currJSON.rates.EUR * this.numberToConvert;\n          this.result = outcome.toFixed(2);\n        }\n        if (this.leftCurrency === 'UAH') {\n          let outcome = +this.currJSON.rates.UAH * this.numberToConvert;\n          this.result = outcome.toFixed(2);\n        }\n      })\n    }\n    }\n  }\n\n  ngOnInit() {\n    this.getCurrentCurrencies();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}